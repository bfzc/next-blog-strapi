name: Build and Deploy
on:
  push:
    branches: [main]

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 配置 SSH 私钥
        run: |
          mkdir -p ~/.ssh 
          echo "${{ secrets.UCLOUD_SSH_KEY }}" > ~/.ssh/ucloud_ssh_key 
          chmod 600 ~/.ssh/ucloud_ssh_key 
          ssh-keyscan ${{ secrets.UCLOUD_HOST }} >> ~/.ssh/known_hosts

      - name: 登录 Docker 仓库
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_REGISTRY_USER }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

      - name: 构建并推送镜像
        run: |
          export IMAGE_TAG="docker.io/bifengzhici/next-blog-strapi:${{  github.sha  }}"
          docker build -t $IMAGE_TAG .
          docker push $IMAGE_TAG

      - name: 远程部署到 UCloud 服务器
        run: |
          ssh -i ~/.ssh/ucloud_ssh_key root@${{ secrets.UCLOUD_HOST }} << 'DEPLOY_EOF'
            echo -e "\n\033[42;1;37m 🔥 SSH登录成功！ [$(date '+%H:%M:%S')] \033[0m\n"
            echo -e "\033[35m▶︎ 主机信息：\033[0m"
            echo "IP地址：$(curl -s ifconfig.me)" 
            echo "系统负载：$(uptime | awk -F 'load average:' '{print $2}')"

            # 拉取最新镜像 
            docker pull docker.io/bifengzhici/next-blog-strapi:${{  github.sha  }}

            # 容器版本管理 
            if docker ps -a | grep -q 'old-app'; then 
              docker rename old-app rollback-app 
            fi 

            # 启动新容器 
            docker run -d \
              --name new-app \
              -p 3000:3000 \
              --health-cmd 'curl --fail http://localhost:3000/health || exit 1' \
              docker.io/bifengzhici/next-blog-strapi:${{  github.sha  }}

            # 增强型健康检查（轮询机制）
            MAX_RETRIES=6 
            RETRY_INTERVAL=5 
            HEALTHY=false 

            for i in $(seq 1 $MAX_RETRIES); do 
              CURRENT_STATUS=$(docker inspect --format '{{.State.Health.Status}}' new-app)
              echo "健康检查状态: ${CURRENT_STATUS} [尝试 $i/$MAX_RETRIES]"
              
              if [ "$CURRENT_STATUS" = "healthy" ]; then 
                HEALTHY=true 
                break 
              fi 
              
              sleep $RETRY_INTERVAL 
            done 

            # 部署结果处理 
            if $HEALTHY; then 
              echo -e "\033[32m✔ 容器健康检查通过\033[0m"
              if docker ps -a | grep -q 'old-app'; then 
                docker stop old-app && docker rm old-app 
              fi 
              docker rename new-app old-app 
              echo -e "\n\033[42;1;37m 🚀 部署成功！当前版本: ${{ github.sha  }} \033[0m"
            else 
              echo -e "\033[41m✖ 健康检查未通过，触发回滚\033[0m"
              docker stop new-app && docker rm new-app 
              if docker ps -a | grep -q 'rollback-app'; then 
                docker rename rollback-app old-app 
                docker start old-app 
                echo -e "\033[33m↩ 已回滚至上一可用版本\033[0m"
              fi 
              exit 1 
            fi 
          DEPLOY_EOF
